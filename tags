!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(LIBFT)	Makefile	/^$(LIBFT):$/;"	t
$(MLX)	Makefile	/^$(MLX):$/;"	t
$(NAME)	Makefile	/^$(NAME): $(OBJDIR) $(MLX) $(LIBFT) $(OBJS)$/;"	t
$(NAME)	libft/Makefile	/^$(NAME): $(MANOBJ) $(BONOBJ) $(EXTOBJ)$/;"	t
$(NAME)	minilibx-linux/Makefile.mk	/^$(NAME)	: $(OBJ)$/;"	t
$(NAME)	minilibx-linux/test/Makefile.mk	/^$(NAME): $(OBJ)$/;"	t
$(OBJDIR)	Makefile	/^$(OBJDIR):$/;"	t
$(OBJDIR)%.o	Makefile	/^$(OBJDIR)%.o: $(SRCDIR)%.c$/;"	t
$(OBJDIR)%.o	libft/Makefile	/^$(OBJDIR)%.o: $(SRCDIR)%.c$/;"	t
$(OBJ_DIR)/%.o	minilibx-linux/Makefile.mk	/^$(OBJ_DIR)\/%.o: %.c$/;"	t
0	.cache/compile_commands.json	/^  {$/;"	o
AR	libft/Makefile	/^AR = ar -rc$/;"	m
AUTHOR	minilibx-linux/man/man1/mlx.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man1/mlx_loop.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man1/mlx_new_image.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man1/mlx_new_window.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx_loop.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx_new_image.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx_new_window.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
BAD_ALLOC	include/error.h	/^# define BAD_ALLOC /;"	d
BAD_ALLOC_MSG	include/error.h	/^# define BAD_ALLOC_MSG /;"	d
BASES_H	libft/include/include_imp/bases.h	/^# define BASES_H$/;"	d
BASE_10	libft/include/include_imp/bases.h	/^# define BASE_10 /;"	d
BASE_16_LOW	libft/include/include_imp/bases.h	/^# define BASE_16_LOW /;"	d
BASE_16_UP	libft/include/include_imp/bases.h	/^# define BASE_16_UP /;"	d
BASE_8	libft/include/include_imp/bases.h	/^# define BASE_8 /;"	d
BONDIR	libft/Makefile	/^BONDIR = bonus\/$/;"	m
BONFILES	libft/Makefile	/^BONFILES = ft_lstnew.c\\$/;"	m
BONOBJ	libft/Makefile	/^BONOBJ = $(addprefix $(OBJDIR), $(addprefix $(BONDIR), $(BONFILES:.c=.o)))$/;"	m
BUFFER_H	libft/include/include_imp/buffer.h	/^# define BUFFER_H$/;"	d
CC	Makefile	/^CC = gcc -g$/;"	m
CC	libft/Makefile	/^CC = gcc$/;"	m
CC	minilibx-linux/Makefile.mk	/^	CC = clang$/;"	m
CC	minilibx-linux/Makefile.mk	/^CC	= gcc$/;"	m
CC	minilibx-linux/test/Makefile.mk	/^	CC	= gcc$/;"	m
CC	minilibx-linux/test/Makefile.mk	/^	CC = clang$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror -MMD -MP$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CFLAGS	minilibx-linux/Makefile.mk	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CFLAGS	minilibx-linux/test/Makefile.mk	/^CFLAGS= -I$(INC) -O3 -I.. -g$/;"	m
COLOR	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
COLOR	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
DEPENDS	Makefile	/^DEPENDS = $(OBJS:.o=.d)$/;"	m
DESCRIPTION	minilibx-linux/man/man1/mlx.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man1/mlx_loop.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man1/mlx_new_image.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man1/mlx_new_window.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx_loop.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx_new_image.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx_new_window.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
ENV_DISPLAY	minilibx-linux/mlx_int.h	/^# define ENV_DISPLAY /;"	d
EOF	minilibx-linux/configure	/^cat <<EOF$/;"	h
ERROR_H	include/error.h	/^# define ERROR_H /;"	d
ERR_NO_TRUECOLOR	minilibx-linux/mlx_int.h	/^# define ERR_NO_TRUECOLOR /;"	d
EXIT_RT_H	include/exit_rt.h	/^# define EXIT_RT_H /;"	d
EXTDIR	libft/Makefile	/^EXTDIR = extra\/$/;"	m
EXTFILES	libft/Makefile	/^EXTFILES = get_next_line.c\\$/;"	m
EXTOBJ	libft/Makefile	/^EXTOBJ = $(addprefix $(OBJDIR), $(addprefix $(EXTDIR), $(EXTFILES:.c=.o)))$/;"	m
FTINC	Makefile	/^FTINC = $(FTPATH)include\/$/;"	m
FTPATH	Makefile	/^FTPATH = libft\/$/;"	m
FT_PRINTF_H	libft/include/include_imp/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
GET_NEXT_LINE_H	libft/include/include_imp/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GNL_BUFFER_SIZE	libft/include/include_imp/get_next_line.h	/^#  define GNL_BUFFER_SIZE /;"	d
GOING	minilibx-linux/man/man1/mlx_loop.1	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
GOING	minilibx-linux/man/man3/mlx_loop.3	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
IM1_SX	minilibx-linux/test/main.c	/^#define	IM1_SX	/;"	d	file:
IM1_SY	minilibx-linux/test/main.c	/^#define	IM1_SY	/;"	d	file:
IM3_SX	minilibx-linux/test/main.c	/^#define	IM3_SX	/;"	d	file:
IM3_SY	minilibx-linux/test/main.c	/^#define	IM3_SY	/;"	d	file:
INC	minilibx-linux/Makefile.mk	/^INC	=%%%%$/;"	m
INC	minilibx-linux/test/Makefile.mk	/^INC=%%%%$/;"	m
INCDIR	Makefile	/^INCDIR = include\/$/;"	m
INCDIR	libft/Makefile	/^INCDIR = include\/include_imp\/$/;"	m
INCLIB	minilibx-linux/test/Makefile.mk	/^INCLIB=$(INC)\/..\/lib$/;"	m
INCLUDE	minilibx-linux/man/man1/mlx.1	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INCLUDE	minilibx-linux/man/man3/mlx.3	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INCPATH	Makefile	/^INCPATH = -I$(INCDIR) -I$(FTINC) -I$(MLXPATH)$/;"	m
INCPATH	libft/Makefile	/^INCPATH = -I$(INCDIR) -Iinclude\/$/;"	m
LFLAGS	minilibx-linux/test/Makefile.mk	/^LFLAGS = -L.. -lmlx -L$(INCLIB) -lXext -lX11 -lm$/;"	m
LIBFT	Makefile	/^LIBFT = $(FTPATH)libft.a$/;"	m
LIBFT_H	libft/include/libft.h	/^# define LIBFT_H$/;"	d
LIBPATH	Makefile	/^LIBPATH = -L$(FTPATH) -L$(MLXPATH)$/;"	m
LIBRARY	minilibx-linux/man/man1/mlx.1	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LIBRARY	minilibx-linux/man/man3/mlx.3	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LINK	Makefile	/^LINK = -lmlx -lft -lm -lXext -lX11$/;"	m
LINKING	minilibx-linux/man/man1/mlx.1	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LINKING	minilibx-linux/man/man3/mlx.3	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LOCALHOST	minilibx-linux/mlx_int.h	/^# define LOCALHOST /;"	d
MANDIR	libft/Makefile	/^MANDIR = mandatory\/$/;"	m
MANFILES	libft/Makefile	/^MANFILES = ft_isalpha.c\\$/;"	m
MANOBJ	libft/Makefile	/^MANOBJ = $(addprefix $(OBJDIR), $(addprefix $(MANDIR), $(MANFILES:.c=.o)))$/;"	m
MINIRT_H	include/miniRT.h	/^# define MINIRT_H$/;"	d
MLX	Makefile	/^MLX = $(MLXPATH)libmlx.a$/;"	m
MLXPATH	Makefile	/^MLXPATH = minilibx-linux\/$/;"	m
MLX_H	minilibx-linux/mlx.h	/^#define	MLX_H$/;"	d
MLX_INT_H	minilibx-linux/mlx_int.h	/^# define MLX_INT_H$/;"	d
MLX_MAX_EVENT	minilibx-linux/mlx_int.h	/^# define MLX_MAX_EVENT /;"	d
MLX_TYPE_SHM	minilibx-linux/mlx_int.h	/^# define MLX_TYPE_SHM /;"	d
MLX_TYPE_SHM_PIXMAP	minilibx-linux/mlx_int.h	/^# define MLX_TYPE_SHM_PIXMAP /;"	d
MLX_TYPE_XIMAGE	minilibx-linux/mlx_int.h	/^# define MLX_TYPE_XIMAGE /;"	d
MiniLibX	minilibx-linux/man/man1/mlx.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man1/mlx_loop.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man1/mlx_new_image.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man1/mlx_new_window.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man1/mlx_pixel_put.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx_loop.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx_new_image.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx_new_window.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	minilibx-linux/man/man3/mlx_pixel_put.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
NAME	Makefile	/^NAME = miniRT$/;"	m
NAME	libft/Makefile	/^NAME = libft.a$/;"	m
NAME	minilibx-linux/Makefile.mk	/^NAME		= libmlx.a$/;"	m
NAME	minilibx-linux/man/man1/mlx.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man1/mlx_loop.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man1/mlx_new_image.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man1/mlx_new_window.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx_loop.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx_new_image.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx_new_window.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	minilibx-linux/test/Makefile.mk	/^NAME= mlx-test$/;"	m
NAME_UNAME	minilibx-linux/Makefile.mk	/^NAME_UNAME	= libmlx_$(UNAME).a$/;"	m
OBJ	minilibx-linux/Makefile.mk	/^OBJ	= $(addprefix $(OBJ_DIR)\/,$(SRC:%.c=%.o))$/;"	m
OBJ	minilibx-linux/test/Makefile.mk	/^OBJ = $(SRC:%.c=%.o)$/;"	m
OBJDIR	Makefile	/^OBJDIR = bin\/$/;"	m
OBJDIR	libft/Makefile	/^OBJDIR = bin\/$/;"	m
OBJS	Makefile	/^OBJS = $(addprefix $(OBJDIR),$(SRCS:.c=.o))$/;"	m
OBJ_DIR	minilibx-linux/Makefile.mk	/^OBJ_DIR = obj$/;"	m
OPEN_MAX	libft/include/include_imp/get_next_line.h	/^#  define OPEN_MAX /;"	d
PARSE_FLAGS_H	libft/include/include_imp/parse_flags.h	/^# define PARSE_FLAGS_H$/;"	d
PRINTERS_H	libft/include/include_imp/printers.h	/^# define PRINTERS_H$/;"	d
PRINTF_BUFFER	libft/include/include_imp/buffer.h	/^#  define PRINTF_BUFFER /;"	d
PRINT_H	include/print.h	/^#define PRINT_H /;"	d
RETURN	minilibx-linux/man/man1/mlx.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man1/mlx_new_image.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man1/mlx_new_window.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man3/mlx.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man3/mlx_new_image.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/man/man3/mlx_new_window.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	minilibx-linux/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RUN	Makefile	/^RUN = .\/$(NAME)$/;"	m
SEE	minilibx-linux/man/man1/mlx.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man1/mlx_loop.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man1/mlx_new_image.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man1/mlx_new_window.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx_loop.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx_new_image.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx_new_window.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SRC	minilibx-linux/Makefile.mk	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	minilibx-linux/test/Makefile.mk	/^SRC = main.c$/;"	m
SRCDIR	Makefile	/^SRCDIR = src\/$/;"	m
SRCDIR	libft/Makefile	/^SRCDIR = src\/$/;"	m
SRCS	Makefile	/^SRCS = main.c vector.c image.c hook.c exit_rt.c print.c init.c test.c trash.c colors.c$/;"	m
STORING	minilibx-linux/man/man1/mlx_new_image.1	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
STORING	minilibx-linux/man/man3/mlx_new_image.3	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx_loop.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx_new_image.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx_new_window.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man1/mlx_pixel_put.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx_loop.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx_new_image.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx_new_window.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	minilibx-linux/man/man3/mlx_pixel_put.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
TEST_H	include/test.h	/^#define TEST_H /;"	d
TRASH_H	include/trash.h	/^# define TRASH_H /;"	d
UNAME	minilibx-linux/Makefile.mk	/^UNAME = $(shell uname)$/;"	m
UNAME	minilibx-linux/test/Makefile.mk	/^UNAME := $(shell uname)$/;"	m
VAL	Makefile	/^VAL = valgrind --leak-check=full .\/$(NAME)$/;"	m
VECTOR_H	include/vector.h	/^#define VECTOR_H$/;"	d
WARN_SHM_ATTACH	minilibx-linux/mlx_int.h	/^# define WARN_SHM_ATTACH /;"	d
WIN1_SX	minilibx-linux/test/main.c	/^#define	WIN1_SX	/;"	d	file:
WIN1_SY	minilibx-linux/test/main.c	/^#define	WIN1_SY	/;"	d	file:
W_H	include/miniRT.h	/^# define W_H /;"	d
W_W	include/miniRT.h	/^# define W_W /;"	d
X-WINDOW	minilibx-linux/man/man1/mlx.1	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	minilibx-linux/man/man1/mlx_loop.1	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
X-WINDOW	minilibx-linux/man/man3/mlx.3	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	minilibx-linux/man/man3/mlx_loop.3	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
XPM	minilibx-linux/man/man1/mlx_new_image.1	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
XPM	minilibx-linux/man/man3/mlx_new_image.3	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
X_ShmAttach	minilibx-linux/mlx_new_image.c	/^#define	X_ShmAttach	/;"	d	file:
add_to_trash	src/trash.c	/^void	add_to_trash(t_rt *rt, void *ptr)$/;"	f	typeref:typename:void
add_v3	src/vector.c	/^t_tuple	*add_v3(t_tuple *v1, t_tuple *v2, t_rt *rt)$/;"	f	typeref:typename:t_tuple *
addr	include/miniRT.h	/^	char	*addr;$/;"	m	struct:s_img	typeref:typename:char *
all	Makefile	/^all: $(NAME)$/;"	t
all	libft/Makefile	/^all: $(NAME)$/;"	t
all	minilibx-linux/Makefile	/^all	: do_configure$/;"	t
all	minilibx-linux/Makefile.mk	/^all	: $(NAME)$/;"	t
all	minilibx-linux/test/Makefile.mk	/^all: $(NAME)$/;"	t
at_exit	minilibx-linux/test/run_tests.sh	/^at_exit() {$/;"	f
bound_str_size	libft/src/extra/ft_printf/print_s.c	/^static int	bound_str_size(const char *str, int max)$/;"	f	typeref:typename:int	file:
bpp	include/miniRT.h	/^	int		bpp;$/;"	m	struct:s_img	typeref:typename:int
bpp	minilibx-linux/mlx_int.h	/^	int				bpp;$/;"	m	struct:s_img	typeref:typename:int
bpp1	minilibx-linux/test/main.c	/^int	bpp1;$/;"	v	typeref:typename:int
bpp2	minilibx-linux/test/main.c	/^int	bpp2;$/;"	v	typeref:typename:int
bpp3	minilibx-linux/test/main.c	/^int	bpp3;$/;"	v	typeref:typename:int
bpp4	minilibx-linux/test/main.c	/^int	bpp4;$/;"	v	typeref:typename:int
check	minilibx-linux/Makefile.mk	/^check: all$/;"	t
clean	Makefile	/^clean:$/;"	t
clean	libft/Makefile	/^clean:$/;"	t
clean	minilibx-linux/Makefile	/^clean	:$/;"	t
clean	minilibx-linux/Makefile.mk	/^clean	:$/;"	t
clean	minilibx-linux/configure	/^clean(){$/;"	f
clean	minilibx-linux/test/Makefile.mk	/^clean:$/;"	t
clear_image	src/image.c	/^void	clear_image(t_rt *rt)$/;"	f	typeref:typename:void
cmap	minilibx-linux/mlx_int.h	/^	Colormap	cmap;$/;"	m	struct:s_xvar	typeref:typename:Colormap
col	minilibx-linux/mlx_int.h	/^	int		col;$/;"	m	struct:s_xpm_col	typeref:typename:int
color	minilibx-linux/mlx_int.h	/^	int		color;$/;"	m	struct:s_col_name	typeref:typename:int
color_map_1	minilibx-linux/test/main.c	/^int	color_map_1(void *win,int w,int h)$/;"	f	typeref:typename:int
color_map_2	minilibx-linux/test/main.c	/^int	color_map_2(unsigned char *data,int bpp,int sl,int w,int h,int endian, int type)$/;"	f	typeref:typename:int
command	.cache/compile_commands.json	/^    "command": "gcc -c -Wall -Wextra -Werror -MMD -MP -Iinclude\/ -Ilibft\/include\/ -Iminilibx-/;"	s	object:0
content	libft/include/libft.h	/^	t_content		content;$/;"	m	struct:s_list	typeref:typename:t_content
cpywrd	libft/src/mandatory/ft_split.c	/^static	char	*cpywrd(char const *s, char c)$/;"	f	typeref:typename:char *	file:
create_back	libft/src/bonus/ft_lstmap.c	/^static int	create_back(t_list *lst, t_content content)$/;"	f	typeref:typename:int	file:
create_matrix_x	src/test.c	/^t_decimal	**create_matrix_x(int x)$/;"	f	typeref:typename:t_decimal **
create_null_tuple	src/vector.c	/^t_tuple	*create_null_tuple(t_rt *rt)$/;"	f	typeref:typename:t_tuple *
create_trgb	src/colors.c	/^int	create_trgb(int t, int r, int g, int b)$/;"	f	typeref:typename:int
create_tuple	src/vector.c	/^t_tuple	*create_tuple(t_decimal *array, t_rt *rt)$/;"	f	typeref:typename:t_tuple *
create_tuple_copy	src/vector.c	/^t_tuple	*create_tuple_copy(t_tuple *t, t_rt *rt)$/;"	f	typeref:typename:t_tuple *
create_v3	src/vector.c	/^t_tuple	*create_v3(t_tuple *p1, t_tuple *p2, t_rt *rt)$/;"	f	typeref:typename:t_tuple *
cross_product_v3	src/vector.c	/^t_tuple	*cross_product_v3(t_tuple *v1, t_tuple *v2, t_rt *rt)$/;"	f	typeref:typename:t_tuple *
data	minilibx-linux/mlx_int.h	/^	char			*data;$/;"	m	struct:s_img	typeref:typename:char *
data1	minilibx-linux/test/main.c	/^char	*data1;$/;"	v	typeref:typename:char *
data2	minilibx-linux/test/main.c	/^char	*data2;$/;"	v	typeref:typename:char *
data3	minilibx-linux/test/main.c	/^char	*data3;$/;"	v	typeref:typename:char *
data4	minilibx-linux/test/main.c	/^char	*data4;$/;"	v	typeref:typename:char *
decrgb	minilibx-linux/mlx_int.h	/^	int			decrgb[6];$/;"	m	struct:s_xvar	typeref:typename:int[6]
depth	minilibx-linux/mlx_int.h	/^	int			depth;$/;"	m	struct:s_xvar	typeref:typename:int
diez	libft/include/include_imp/parse_flags.h	/^	int		diez;$/;"	m	struct:s_flags	typeref:typename:int
directory	.cache/compile_commands.json	/^    "directory": "\/mnt\/nfs\/homes\/nthimoni\/Documents\/miniRT",$/;"	s	object:0
dispatcher	libft/src/extra/ft_printf/ft_printf.c	/^static void	dispatcher(t_flags *flags, va_list ap)$/;"	f	typeref:typename:void	file:
display	minilibx-linux/mlx_int.h	/^	Display		*display;$/;"	m	struct:s_xvar	typeref:typename:Display *
do_configure	minilibx-linux/Makefile	/^do_configure	:$/;"	t
do_flush	minilibx-linux/mlx_int.h	/^	int			do_flush;$/;"	m	struct:s_xvar	typeref:typename:int
dot	libft/include/include_imp/parse_flags.h	/^	int		dot;$/;"	m	struct:s_flags	typeref:typename:int
dot_product_v3	src/vector.c	/^t_decimal	dot_product_v3(t_tuple *v1, t_tuple *v2)$/;"	f	typeref:typename:t_decimal
end_loop	minilibx-linux/mlx_int.h	/^	int 		end_loop;$/;"	m	struct:s_xvar	typeref:typename:int
endian	include/miniRT.h	/^	int		endian;$/;"	m	struct:s_img	typeref:typename:int
endian1	minilibx-linux/test/main.c	/^int	endian1;$/;"	v	typeref:typename:int
endian2	minilibx-linux/test/main.c	/^int	endian2;$/;"	v	typeref:typename:int
endian3	minilibx-linux/test/main.c	/^int	endian3;$/;"	v	typeref:typename:int
endian4	minilibx-linux/test/main.c	/^int	endian4;$/;"	v	typeref:typename:int
exit_rt	src/exit_rt.c	/^void	exit_rt(t_rt *rt, char *error_msg, int exit_code)$/;"	f	typeref:typename:void
expose_hook	minilibx-linux/mlx_int.h	/^	int					(*expose_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
expose_param	minilibx-linux/mlx_int.h	/^	void				*expose_param;$/;"	m	struct:s_win_list	typeref:typename:void *
expose_win1	minilibx-linux/test/main.c	/^int	expose_win1(void *p)$/;"	f	typeref:typename:int
expose_win2	minilibx-linux/test/main.c	/^int	expose_win2(void *p)$/;"	f	typeref:typename:int
fclean	Makefile	/^fclean: clean$/;"	t
fclean	libft/Makefile	/^fclean: clean$/;"	t
file	.cache/compile_commands.json	/^    "file": "src\/main.c"$/;"	s	object:0
fill_matrix_x	src/test.c	/^void	fill_matrix_x(t_decimal **array, int sz)$/;"	f	typeref:typename:void
fill_str	libft/src/mandatory/ft_itoa.c	/^static	void	fill_str(char *str, int val, size_t len)$/;"	f	typeref:typename:void	file:
flush	libft/src/extra/ft_printf/write_buf.c	/^static int	flush(char *buffer, size_t *len)$/;"	f	typeref:typename:int	file:
format	minilibx-linux/mlx_int.h	/^	int				format;$/;"	m	struct:s_img	typeref:typename:int
free_part_tab	libft/src/mandatory/ft_split.c	/^char	**free_part_tab(char **ret, int a)$/;"	f	typeref:typename:char **
free_ptr	libft/src/extra/get_next_line.c	/^static char	*free_ptr(void **ptr)$/;"	f	typeref:typename:char *	file:
free_trash	src/trash.c	/^void	free_trash(t_list *trash)$/;"	f	typeref:typename:void
ft_atoi	libft/src/mandatory/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f	typeref:typename:int
ft_atol	libft/src/extra/ft_atol.c	/^long int	ft_atol(const char *str)$/;"	f	typeref:typename:long int
ft_bzero	libft/src/mandatory/ft_bzero.c	/^void	ft_bzero(void *pointer, size_t count)$/;"	f	typeref:typename:void
ft_calloc	libft/src/mandatory/ft_calloc.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_is_ws	libft/src/extra/ft_is_ws.c	/^int	ft_is_ws(char a)$/;"	f	typeref:typename:int
ft_isalnum	libft/src/mandatory/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	libft/src/mandatory/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	libft/src/mandatory/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	libft/src/mandatory/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	libft/src/mandatory/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_itoa	libft/src/mandatory/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_lstadd_back	libft/src/bonus/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **alst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	libft/src/bonus/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **alst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	libft/src/bonus/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(t_content))$/;"	f	typeref:typename:void
ft_lstdelone	libft/src/bonus/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(t_content))$/;"	f	typeref:typename:void
ft_lstiter	libft/src/bonus/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_content))$/;"	f	typeref:typename:void
ft_lstlast	libft/src/bonus/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	libft/src/bonus/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, t_content (*f)(t_content),$/;"	f	typeref:typename:t_list *
ft_lstnew	libft/src/bonus/ft_lstnew.c	/^t_list	*ft_lstnew(t_content content)$/;"	f	typeref:typename:t_list *
ft_lstsize	libft/src/bonus/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_memchr	libft/src/mandatory/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	libft/src/mandatory/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	libft/src/mandatory/ft_memcpy.c	/^void	*ft_memcpy(void *destination, const void *source, size_t size)$/;"	f	typeref:typename:void *
ft_memmove	libft/src/mandatory/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memset	libft/src/mandatory/ft_memset.c	/^void	*ft_memset(void *pointer, int value, size_t count)$/;"	f	typeref:typename:void *
ft_printf	libft/src/extra/ft_printf/ft_printf.c	/^int	ft_printf(const char *s, ...)$/;"	f	typeref:typename:int
ft_putchar_fd	libft/src/mandatory/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putendl_fd	libft/src/mandatory/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	libft/src/mandatory/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd	libft/src/mandatory/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_split	libft/src/mandatory/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strchr	libft/src/mandatory/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strdup	libft/src/mandatory/ft_strdup.c	/^char	*ft_strdup(const char *src)$/;"	f	typeref:typename:char *
ft_striteri	libft/src/mandatory/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f	typeref:typename:void
ft_strjoin	libft/src/mandatory/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strlcat	libft/src/mandatory/ft_strlcat.c	/^size_t	ft_strlcat(char *dest, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlcpy	libft/src/mandatory/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dest, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	libft/src/mandatory/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f	typeref:typename:size_t
ft_strmapi	libft/src/mandatory/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	libft/src/mandatory/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	libft/src/mandatory/ft_strnstr.c	/^char	*ft_strnstr(const char *str, const char *to_find, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	libft/src/mandatory/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	libft/src/mandatory/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_subcat	libft/src/extra/ft_printf/write_buf.c	/^static int	ft_subcat(char *dst, const char *src, size_t len, size_t content)$/;"	f	typeref:typename:int	file:
ft_substr	libft/src/mandatory/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	libft/src/mandatory/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	libft/src/mandatory/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
gc	minilibx-linux/mlx_int.h	/^	GC					gc;$/;"	m	struct:s_win_list	typeref:typename:GC
gc	minilibx-linux/mlx_int.h	/^	GC				gc;$/;"	m	struct:s_img	typeref:typename:GC
gere_mouse	minilibx-linux/test/new_win.c	/^int gere_mouse(int x,int y,int button,void*toto)$/;"	f	typeref:typename:int
get_b	src/colors.c	/^int	get_b(int trgb)$/;"	f	typeref:typename:int
get_g	src/colors.c	/^int	get_g(int trgb)$/;"	f	typeref:typename:int
get_next_line	libft/src/extra/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_r	src/colors.c	/^int	get_r(int trgb)$/;"	f	typeref:typename:int
get_t	src/colors.c	/^int	get_t(int trgb)$/;"	f	typeref:typename:int
get_xlib_include_path	minilibx-linux/configure	/^get_xlib_include_path(){$/;"	f
height	minilibx-linux/mlx_int.h	/^	int				height;$/;"	m	struct:s_img	typeref:typename:int
hook	minilibx-linux/mlx_int.h	/^	int		(*hook)();$/;"	m	struct:s_event_list	typeref:typename:int (*)()
hooks	minilibx-linux/mlx_int.h	/^	t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list	typeref:typename:t_event_list[]
im1	minilibx-linux/test/main.c	/^void    *im1;$/;"	v	typeref:typename:void *
im2	minilibx-linux/test/main.c	/^void	*im2;$/;"	v	typeref:typename:void *
im3	minilibx-linux/test/main.c	/^void	*im3;$/;"	v	typeref:typename:void *
im4	minilibx-linux/test/main.c	/^void	*im4;$/;"	v	typeref:typename:void *
image	minilibx-linux/mlx_int.h	/^	XImage			*image;$/;"	m	struct:s_img	typeref:typename:XImage *
img	include/miniRT.h	/^	t_img	*img;$/;"	m	struct:s_rt	typeref:typename:t_img *
img	include/miniRT.h	/^	void	*img;$/;"	m	struct:s_img	typeref:typename:void *
init_flags	libft/src/extra/ft_printf/ft_printf.c	/^static void	init_flags(t_flags *flags)$/;"	f	typeref:typename:void	file:
init_rt	src/init.c	/^t_rt	*init_rt(void)$/;"	f	typeref:typename:t_rt *
isin	libft/src/mandatory/ft_strtrim.c	/^static	int	isin(char a, const char *str)$/;"	f	typeref:typename:int	file:
key_hook	minilibx-linux/mlx_int.h	/^	int					(*key_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
key_param	minilibx-linux/mlx_int.h	/^	void				*key_param;$/;"	m	struct:s_win_list	typeref:typename:void *
key_win1	minilibx-linux/test/main.c	/^int	key_win1(int key,void *p)$/;"	f	typeref:typename:int
key_win2	minilibx-linux/test/main.c	/^int	key_win2(int key,void *p)$/;"	f	typeref:typename:int
key_win3	minilibx-linux/test/main.c	/^int	key_win3(int key,void *p)$/;"	f	typeref:typename:int
length_v3	src/vector.c	/^t_decimal	length_v3(t_tuple *v)$/;"	f	typeref:typename:t_decimal
line_lgth	include/miniRT.h	/^	int		line_lgth;$/;"	m	struct:s_img	typeref:typename:int
local_endian	minilibx-linux/test/main.c	/^int	local_endian;$/;"	v	typeref:typename:int
log_error	minilibx-linux/configure	/^log_error(){$/;"	f
log_error	minilibx-linux/test/run_tests.sh	/^log_error(){$/;"	f
log_info	minilibx-linux/configure	/^log_info(){$/;"	f
log_info	minilibx-linux/test/run_tests.sh	/^log_info(){$/;"	f
logging	minilibx-linux/configure	/^logging(){$/;"	f
logging	minilibx-linux/test/run_tests.sh	/^logging(){$/;"	f
loop_hook	minilibx-linux/mlx_int.h	/^	int			(*loop_hook)();$/;"	m	struct:s_xvar	typeref:typename:int (*)()
loop_param	minilibx-linux/mlx_int.h	/^	void		*loop_param;$/;"	m	struct:s_xvar	typeref:typename:void *
main	minilibx-linux/configure	/^main(){$/;"	f
main	minilibx-linux/test/main.c	/^int	main()$/;"	f	typeref:typename:int
main	minilibx-linux/test/new_win.c	/^int main()$/;"	f	typeref:typename:int
main	minilibx-linux/test/run_tests.sh	/^main(){$/;"	f
main	src/main.c	/^int	main(void)$/;"	f	typeref:typename:int
mask	minilibx-linux/mlx_int.h	/^	int		mask;$/;"	m	struct:s_event_list	typeref:typename:int
minus	libft/include/include_imp/parse_flags.h	/^	int		minus;$/;"	m	struct:s_flags	typeref:typename:int
mlx	include/miniRT.h	/^	void	*mlx;$/;"	m	struct:s_rt	typeref:typename:void *
mlx	minilibx-linux/test/main.c	/^void	*mlx;$/;"	v	typeref:typename:void *
mlx	minilibx-linux/test/new_win.c	/^void *mlx;$/;"	v	typeref:typename:void *
mlx_X_error	minilibx-linux/mlx_new_image.c	/^int	mlx_X_error;$/;"	v	typeref:typename:int
mlx_clear_window	minilibx-linux/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_col_name	minilibx-linux/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name[]
mlx_destroy_display	minilibx-linux/mlx_destroy_display.c	/^int	mlx_destroy_display(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_destroy_image	minilibx-linux/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f	typeref:typename:int
mlx_destroy_window	minilibx-linux/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_do_key_autorepeatoff	minilibx-linux/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_key_autorepeaton	minilibx-linux/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_sync	minilibx-linux/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_expose_hook	minilibx-linux/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_ext_fullscreen	minilibx-linux/mlx_ext_randr.c	/^int			mlx_ext_fullscreen(t_xvar *xvar, t_win_list *win, int fullscreen)$/;"	f	typeref:typename:int
mlx_flush_event	minilibx-linux/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_get_color_value	minilibx-linux/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_get_data_addr	minilibx-linux/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f	typeref:typename:char *
mlx_get_screen_size	minilibx-linux/mlx_screen_size.c	/^int		mlx_get_screen_size(void *mlx_ptr, int *sizex, int *sizey)$/;"	f	typeref:typename:int
mlx_hook	minilibx-linux/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f	typeref:typename:int
mlx_init	minilibx-linux/mlx_init.c	/^void	*mlx_init()$/;"	f	typeref:typename:void *
mlx_int_anti_resize_win	minilibx-linux/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f	typeref:typename:int
mlx_int_deal_shm	minilibx-linux/mlx_init.c	/^int		mlx_int_deal_shm(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_do_nothing	minilibx-linux/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f	typeref:typename:int
mlx_int_egal_img	minilibx-linux/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f	typeref:typename:int
mlx_int_file_get_rid_comment	minilibx-linux/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f	typeref:typename:int
mlx_int_get_col_name	minilibx-linux/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f	typeref:typename:int
mlx_int_get_good_color	minilibx-linux/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_int_get_line	minilibx-linux/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_get_text_rgb	minilibx-linux/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f	typeref:typename:int
mlx_int_get_visual	minilibx-linux/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_new_image	minilibx-linux/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f	typeref:typename:void *
mlx_int_new_xshm_image	minilibx-linux/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f	typeref:typename:void *
mlx_int_param_ButtonPress	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_ButtonRelease	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_Expose	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyPress	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyRelease	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_MotionNotify	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_event	minilibx-linux/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v	typeref:typename:int (* ([]))()
mlx_int_param_generic	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_undef	minilibx-linux/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f	typeref:typename:int
mlx_int_parse_xpm	minilibx-linux/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f	typeref:typename:void *
mlx_int_rgb_conversion	minilibx-linux/mlx_init.c	/^int		mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_set_win_event_mask	minilibx-linux/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_static_line	minilibx-linux/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_str_str	minilibx-linux/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_str_cote	minilibx-linux/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_to_wordtab	minilibx-linux/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f	typeref:typename:char **
mlx_int_wait_first_expose	minilibx-linux/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f	typeref:typename:int
mlx_int_xpm_f_image	minilibx-linux/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f	typeref:typename:void *
mlx_int_xpm_set_pixel	minilibx-linux/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f	typeref:typename:int
mlx_key_hook	minilibx-linux/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_loop	minilibx-linux/mlx_loop.c	/^int			mlx_loop(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_end	minilibx-linux/mlx_loop.c	/^int			mlx_loop_end(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_hook	minilibx-linux/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_get_pos	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_get_pos(t_xvar *xvar, t_win_list *win, \\$/;"	f	typeref:typename:int
mlx_mouse_hide	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_hide(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_mouse_hook	minilibx-linux/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_move	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_move(t_xvar *xvar, t_win_list *win, int x, int y)$/;"	f	typeref:typename:int
mlx_mouse_show	minilibx-linux/mlx_mouse.c	/^int		mlx_mouse_show(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_new_image	minilibx-linux/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_image2	minilibx-linux/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_window	minilibx-linux/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f	typeref:typename:void *
mlx_pixel_put	minilibx-linux/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_put_image_to_window	minilibx-linux/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f	typeref:typename:int
mlx_set_font	minilibx-linux/mlx_set_font.c	/^void	mlx_set_font(t_xvar *xvar, t_win_list *win, char *name)$/;"	f	typeref:typename:void
mlx_string_put	minilibx-linux/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_xpm_file_to_image	minilibx-linux/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f	typeref:typename:void *
mlx_xpm_file_to_image	minilibx-linux/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	minilibx-linux/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	minilibx-linux/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f	typeref:typename:void *
mouse_hook	minilibx-linux/mlx_int.h	/^	int					(*mouse_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
mouse_param	minilibx-linux/mlx_int.h	/^	void				*mouse_param;$/;"	m	struct:s_win_list	typeref:typename:void *
mouse_win1	minilibx-linux/test/main.c	/^int	mouse_win1(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win2	minilibx-linux/test/main.c	/^int	mouse_win2(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win3	minilibx-linux/test/main.c	/^int	mouse_win3(int x,int y, void *p)$/;"	f	typeref:typename:int
my_mlx_pixel_put	src/image.c	/^void	my_mlx_pixel_put(t_rt *rt, int x, int y, int color)$/;"	f	typeref:typename:void
name	minilibx-linux/mlx_int.h	/^	char	*name;$/;"	m	struct:s_col_name	typeref:typename:char *
name	minilibx-linux/mlx_int.h	/^	int		name;$/;"	m	struct:s_xpm_col	typeref:typename:int
nb_size	libft/src/mandatory/ft_itoa.c	/^static	size_t	nb_size(int a)$/;"	f	typeref:typename:size_t	file:
neg_v3	src/vector.c	/^t_tuple	*neg_v3(t_tuple *v, t_rt *rt)$/;"	f	typeref:typename:t_tuple *
newempty	libft/src/extra/get_next_line.c	/^static char	*newempty(void)$/;"	f	typeref:typename:char *	file:
next	libft/include/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
next	minilibx-linux/mlx_int.h	/^	struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list *
norm_v3	src/vector.c	/^t_tuple	*norm_v3(t_tuple *v, t_rt *rt)$/;"	f	typeref:typename:t_tuple *
null_str	libft/src/extra/ft_printf/print_s.c	/^static int	null_str(const char *str, t_flags *flags)$/;"	f	typeref:typename:int	file:
param	minilibx-linux/mlx_int.h	/^	void	*param;$/;"	m	struct:s_event_list	typeref:typename:void *
parse	libft/src/extra/get_next_line.c	/^static char	*parse(char **prev)$/;"	f	typeref:typename:char *	file:
parse_args	minilibx-linux/configure	/^parse_args(){$/;"	f
parse_flags	libft/src/extra/ft_printf/parse_flags.c	/^const char	*parse_flags(const char *str, t_flags *flags)$/;"	f	typeref:typename:const char *
pix	minilibx-linux/mlx_int.h	/^	Pixmap			pix;$/;"	m	struct:s_img	typeref:typename:Pixmap
plus	libft/include/include_imp/parse_flags.h	/^	int		plus;$/;"	m	struct:s_flags	typeref:typename:int
position	include/test.h	/^	t_tuple	*position;$/;"	m	struct:s_proj	typeref:typename:t_tuple *
print_before	libft/src/extra/ft_printf/print_di.c	/^static void	print_before(t_flags *flags, int a, unsigned int len, int sign)$/;"	f	typeref:typename:void	file:
print_before	libft/src/extra/ft_printf/print_u.c	/^static void	print_before(t_flags *flags, unsigned int len)$/;"	f	typeref:typename:void	file:
print_before	libft/src/extra/ft_printf/print_xX.c	/^static void	print_before(t_flags *flags, unsigned int len, int i, int pref)$/;"	f	typeref:typename:void	file:
print_c	libft/src/extra/ft_printf/print_c.c	/^void	print_c(unsigned char c, t_flags *flags)$/;"	f	typeref:typename:void
print_di	libft/src/extra/ft_printf/print_di.c	/^void	print_di(int a, t_flags *flags)$/;"	f	typeref:typename:void
print_matrix4	src/print.c	/^void	print_matrix4(t_decimal **m)$/;"	f	typeref:typename:void
print_n_char	libft/src/extra/ft_printf/print_u.c	/^void	print_n_char(char c, int n, int sup_zero)$/;"	f	typeref:typename:void
print_p	libft/src/extra/ft_printf/print_p.c	/^void	print_p(void *p, t_flags *flags)$/;"	f	typeref:typename:void
print_percent	libft/src/extra/ft_printf/print_percent.c	/^void	print_percent(t_flags *flags)$/;"	f	typeref:typename:void
print_s	libft/src/extra/ft_printf/print_s.c	/^void	print_s(const char *s, t_flags *flags)$/;"	f	typeref:typename:void
print_tuple	src/print.c	/^void	print_tuple(t_tuple *t, char *str)$/;"	f	typeref:typename:void
print_u	libft/src/extra/ft_printf/print_u.c	/^void	print_u(unsigned int u, t_flags *flags)$/;"	f	typeref:typename:void
print_ui_base	libft/src/extra/ft_printf/print_u.c	/^void	print_ui_base(unsigned long int val, const char *base)$/;"	f	typeref:typename:void
print_x	libft/src/extra/ft_printf/print_xX.c	/^void	print_x(int i, t_flags *flags)$/;"	f	typeref:typename:void
private_cmap	minilibx-linux/mlx_int.h	/^	int			private_cmap;$/;"	m	struct:s_xvar	typeref:typename:int
process_dot	libft/src/extra/ft_printf/parse_flags.c	/^static void	process_dot(t_flags *flags)$/;"	f	typeref:typename:void	file:
pshm_format	minilibx-linux/mlx_int.h	/^	int			pshm_format;$/;"	m	struct:s_xvar	typeref:typename:int
re	Makefile	/^re: fclean $(NAME) run$/;"	t
re	libft/Makefile	/^re: fclean $(NAME)$/;"	t
re	minilibx-linux/Makefile	/^re	: clean all$/;"	t
re	minilibx-linux/test/Makefile.mk	/^re: clean all$/;"	t
read_file	libft/src/extra/get_next_line.c	/^static int	read_file(int fd, char **prev, char *buffer)$/;"	f	typeref:typename:int	file:
read_nb	libft/src/extra/ft_printf/parse_flags.c	/^static int	read_nb(t_flags *flags, const char *str)$/;"	f	typeref:typename:int	file:
red_cross	src/hook.c	/^int	red_cross(t_rt *rt)$/;"	f	typeref:typename:int
reg_dot	libft/src/extra/ft_printf/print_di.c	/^void	reg_dot(t_flags *flags, size_t len)$/;"	f	typeref:typename:void
render_next_frame	src/image.c	/^int	render_next_frame(t_rt *rt)$/;"	f	typeref:typename:int
root	minilibx-linux/mlx_int.h	/^	Window		root;$/;"	m	struct:s_xvar	typeref:typename:Window
run	Makefile	/^run:$/;"	t
s_col_name	minilibx-linux/mlx_int.h	/^struct	s_col_name$/;"	s
s_event_list	minilibx-linux/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_flags	libft/include/include_imp/parse_flags.h	/^typedef struct s_flags$/;"	s
s_img	include/miniRT.h	/^typedef struct	s_img$/;"	s
s_img	minilibx-linux/mlx_int.h	/^typedef struct	s_img$/;"	s
s_list	libft/include/libft.h	/^typedef struct s_list$/;"	s
s_proj	include/test.h	/^typedef struct	s_proj$/;"	s
s_rt	include/miniRT.h	/^typedef struct	s_rt$/;"	s
s_tuple	include/vector.h	/^typedef struct	s_tuple$/;"	s
s_win_list	minilibx-linux/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_xpm_col	minilibx-linux/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xvar	minilibx-linux/mlx_int.h	/^typedef struct	s_xvar$/;"	s
saved_mode	minilibx-linux/mlx_ext_randr.c	/^RRMode	saved_mode = 0;$/;"	v	typeref:typename:RRMode
scale_v3	src/vector.c	/^void	scale_v3(t_tuple *v1, t_decimal s)$/;"	f	typeref:typename:void
screen	minilibx-linux/mlx_int.h	/^	int			screen;$/;"	m	struct:s_xvar	typeref:typename:int
shm	minilibx-linux/mlx_int.h	/^	XShmSegmentInfo	shm;$/;"	m	struct:s_img	typeref:typename:XShmSegmentInfo
shm_att_pb	minilibx-linux/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f	typeref:typename:int
show	minilibx-linux/Makefile.mk	/^show:$/;"	t
show	minilibx-linux/test/Makefile.mk	/^show:$/;"	t
show_help	minilibx-linux/configure	/^show_help(){$/;"	f
sigint_handler	minilibx-linux/test/run_tests.sh	/^sigint_handler(){$/;"	f
size	libft/include/include_imp/parse_flags.h	/^	int		size;$/;"	m	struct:s_flags	typeref:typename:int
size_line	minilibx-linux/mlx_int.h	/^	int				size_line;$/;"	m	struct:s_img	typeref:typename:int
size_matrix	src/test.c	/^int	size_matrix(t_decimal **array)$/;"	f	typeref:typename:int
sl1	minilibx-linux/test/main.c	/^int	sl1;$/;"	v	typeref:typename:int
sl2	minilibx-linux/test/main.c	/^int	sl2;$/;"	v	typeref:typename:int
sl3	minilibx-linux/test/main.c	/^int	sl3;$/;"	v	typeref:typename:int
sl4	minilibx-linux/test/main.c	/^int	sl4;$/;"	v	typeref:typename:int
space	libft/include/include_imp/parse_flags.h	/^	int		space;$/;"	m	struct:s_flags	typeref:typename:int
strlcpy_is_not_posix	minilibx-linux/mlx_xpm.c	/^unsigned int	strlcpy_is_not_posix(char *dest, char *src, unsigned int size)$/;"	f	typeref:typename:unsigned int
t_content	libft/include/libft.h	/^typedef void*	t_content;$/;"	t	typeref:typename:void *
t_decimal	include/vector.h	/^typedef double	t_decimal;$/;"	t	typeref:typename:double
t_event_list	minilibx-linux/mlx_int.h	/^}				t_event_list;$/;"	t	typeref:struct:s_event_list
t_flags	libft/include/include_imp/parse_flags.h	/^}	t_flags;$/;"	t	typeref:struct:s_flags
t_img	include/miniRT.h	/^}	t_img;$/;"	t	typeref:struct:s_img
t_img	minilibx-linux/mlx_int.h	/^}				t_img;$/;"	t	typeref:struct:s_img
t_list	libft/include/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
t_proj	include/test.h	/^}	t_proj;$/;"	t	typeref:struct:s_proj
t_rt	include/miniRT.h	/^}	t_rt;$/;"	t	typeref:struct:s_rt
t_tuple	include/vector.h	/^}	t_tuple;$/;"	t	typeref:struct:s_tuple
t_win_list	minilibx-linux/mlx_int.h	/^}				t_win_list;$/;"	t	typeref:struct:s_win_list
t_xpm_col	minilibx-linux/mlx_int.h	/^}				t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xvar	minilibx-linux/mlx_int.h	/^}				t_xvar;$/;"	t	typeref:struct:s_xvar
test	src/test.c	/^void	test(t_rt *rt)$/;"	f	typeref:typename:void
test2	src/test.c	/^void	test2(t_rt *rt)$/;"	f	typeref:typename:void
test_default_main	minilibx-linux/test/run_tests.sh	/^test_default_main(){$/;"	f
tick_environment	src/test.c	/^void	tick_environment(t_proj *proj, t_tuple *gravity, t_tuple *wind, t_rt *rt)$/;"	f	typeref:typename:void
trash	include/miniRT.h	/^	t_list	*trash;$/;"	m	struct:s_rt	typeref:typename:t_list *
type	libft/include/include_imp/parse_flags.h	/^	char	type;$/;"	m	struct:s_flags	typeref:typename:char
type	minilibx-linux/mlx_int.h	/^	int				type;$/;"	m	struct:s_img	typeref:typename:int
type_specifier	libft/src/extra/ft_printf/parse_flags.c	/^static int	type_specifier(char c, char *u)$/;"	f	typeref:typename:int	file:
ui_len	libft/src/extra/ft_printf/print_u.c	/^size_t	ui_len(unsigned long int u, size_t base_len)$/;"	f	typeref:typename:size_t
use_xshm	minilibx-linux/mlx_int.h	/^	int			use_xshm;$/;"	m	struct:s_xvar	typeref:typename:int
val	Makefile	/^val:$/;"	t
velocity	include/test.h	/^	t_tuple	*velocity;$/;"	m	struct:s_proj	typeref:typename:t_tuple *
visual	minilibx-linux/mlx_int.h	/^	Visual		*visual;$/;"	m	struct:s_xvar	typeref:typename:Visual *
w	include/vector.h	/^	t_decimal	w;$/;"	m	struct:s_tuple	typeref:typename:t_decimal
width	minilibx-linux/mlx_int.h	/^	int				width;$/;"	m	struct:s_img	typeref:typename:int
win	include/miniRT.h	/^	void	*win;$/;"	m	struct:s_rt	typeref:typename:void *
win1	minilibx-linux/test/main.c	/^void	*win1;$/;"	v	typeref:typename:void *
win1	minilibx-linux/test/new_win.c	/^void *win1;$/;"	v	typeref:typename:void *
win2	minilibx-linux/test/main.c	/^void    *win2;$/;"	v	typeref:typename:void *
win2	minilibx-linux/test/new_win.c	/^void *win2;$/;"	v	typeref:typename:void *
win3	minilibx-linux/test/main.c	/^void    *win3;$/;"	v	typeref:typename:void *
win_count	minilibx-linux/mlx_loop.c	/^static int	win_count(t_xvar *xvar)$/;"	f	typeref:typename:int	file:
win_list	minilibx-linux/mlx_int.h	/^	t_win_list	*win_list;$/;"	m	struct:s_xvar	typeref:typename:t_win_list *
window	minilibx-linux/mlx_int.h	/^	Window				window;$/;"	m	struct:s_win_list	typeref:typename:Window
wm_delete_window	minilibx-linux/mlx_int.h	/^	Atom		wm_delete_window;$/;"	m	struct:s_xvar	typeref:typename:Atom
wm_protocols	minilibx-linux/mlx_int.h	/^	Atom		wm_protocols;$/;"	m	struct:s_xvar	typeref:typename:Atom
wrdcnt	libft/src/mandatory/ft_split.c	/^static	int	wrdcnt(char const *s, char c)$/;"	f	typeref:typename:int	file:
write_buf	libft/src/extra/ft_printf/write_buf.c	/^int	write_buf(const char *str, size_t len)$/;"	f	typeref:typename:int
x	include/miniRT.h	/^	int		x;$/;"	m	struct:s_img	typeref:typename:int
x	include/vector.h	/^	t_decimal	x;$/;"	m	struct:s_tuple	typeref:typename:t_decimal
xpm1_x	minilibx-linux/test/main.c	/^int	xpm1_x;$/;"	v	typeref:typename:int
xpm1_y	minilibx-linux/test/main.c	/^int	xpm1_y;$/;"	v	typeref:typename:int
y	include/miniRT.h	/^	int		y;$/;"	m	struct:s_img	typeref:typename:int
y	include/vector.h	/^	t_decimal	y;$/;"	m	struct:s_tuple	typeref:typename:t_decimal
z	include/vector.h	/^	t_decimal	z;$/;"	m	struct:s_tuple	typeref:typename:t_decimal
zero	libft/include/include_imp/parse_flags.h	/^	int		zero;$/;"	m	struct:s_flags	typeref:typename:int
